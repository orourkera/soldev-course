"use strict";var e=require("../../../../buffer-layout/lib/Layout.cjs"),t=require("@solana/web3.js"),r=require("../constants.cjs"),i=require("../errors.cjs"),n=require("../extensions/accountType.cjs"),o=require("./account.cjs"),u=require("./multisig.cjs"),s=require("../../../../buffer-layout-utils/lib/esm/web3.cjs"),c=require("../../../../buffer-layout-utils/lib/esm/bigint.cjs"),a=require("../../../../buffer-layout-utils/lib/esm/native.cjs");const l=e.struct([e.u32("mintAuthorityOption"),s.publicKey("mintAuthority"),c.u64("supply"),e.u8("decimals"),a.bool("isInitialized"),e.u32("freezeAuthorityOption"),s.publicKey("freezeAuthority")]),f=l.span;function A(e,t,s=r.TOKEN_PROGRAM_ID){if(!t)throw new i.TokenAccountNotFoundError;if(!t.owner.equals(s))throw new i.TokenInvalidAccountOwnerError;if(t.data.length<f)throw new i.TokenInvalidAccountSizeError;const c=l.decode(t.data.slice(0,f));let a=Buffer.alloc(0);if(t.data.length>f){if(t.data.length<=o.ACCOUNT_SIZE)throw new i.TokenInvalidAccountSizeError;if(t.data.length===u.MULTISIG_SIZE)throw new i.TokenInvalidAccountSizeError;if(t.data[o.ACCOUNT_SIZE]!=n.AccountType.Mint)throw new i.TokenInvalidMintError;a=t.data.slice(o.ACCOUNT_SIZE+n.ACCOUNT_TYPE_SIZE)}return{address:e,mintAuthority:c.mintAuthorityOption?c.mintAuthority:null,supply:c.supply,decimals:c.decimals,isInitialized:c.isInitialized,freezeAuthority:c.freezeAuthorityOption?c.freezeAuthority:null,tlvData:a}}exports.MINT_SIZE=f,exports.MintLayout=l,exports.getAssociatedTokenAddressSync=function(e,n,o=!1,u=r.TOKEN_PROGRAM_ID,s=r.ASSOCIATED_TOKEN_PROGRAM_ID){if(!o&&!t.PublicKey.isOnCurve(n.toBuffer()))throw new i.TokenOwnerOffCurveError;const[c]=t.PublicKey.findProgramAddressSync([n.toBuffer(),u.toBuffer(),e.toBuffer()],s);return c},exports.getMint=async function(e,t,i,n=r.TOKEN_PROGRAM_ID){return A(t,await e.getAccountInfo(t,i),n)},exports.unpackMint=A;
//# sourceMappingURL=mint.cjs.map
