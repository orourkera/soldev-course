"use strict";var e=require("@solana/web3.js"),r=require("../utils/getDomainKeySync.cjs"),t=require("../nft/state.cjs"),o=require("../nft/const.cjs"),a=require("../record/getRecordKeySync.cjs"),i=require("../types/record.cjs"),n=require("../record_v2/getRecordV2Key.cjs"),d=require("../node_modules/@bonfida/sns-records/dist/index.cjs"),s=require("../error.cjs"),c=require("../state.cjs"),l=require("../record/checkSolRecord.cjs"),u=require("../nft/retrieveNftOwnerV2.cjs");exports.resolve=async(w,f,R={allowPda:!1})=>{var y;const{pubkey:E}=r.getDomainKeySync(f),[N]=t.NftRecord.findKeySync(E,o.NAME_TOKENIZER_ID),g=a.getRecordKeySync(f,i.Record.SOL),S=n.getRecordV2Key(f,i.Record.SOL),[v,m,h,A]=await w.getMultipleAccountsInfo([N,g,S,E]);if(!(null==A?void 0:A.data))throw new s.DomainDoesNotExist(`Domain ${f} does not exist`);const q=c.NameRegistryState.deserialize(A.data);if(null==v?void 0:v.data){if(t.NftRecord.deserialize(v.data).tag===t.Tag.ActiveRecord){const e=await u.retrieveNftOwnerV2(w,E);if(!e)throw new s.CouldNotFindNftOwner;return e}}e:if(null==h?void 0:h.data){const r=d.Record.deserialize(h.data),t=r.getStalenessId(),o=r.getRoAId(),a=r.getContent();if(32!==a.length)throw new s.RecordMalformed("Record is malformed");if(r.header.rightOfAssociationValidation!==d.Validation.Solana||r.header.stalenessValidation!==d.Validation.Solana)throw new s.WrongValidation;if(!t.equals(q.owner.toBuffer()))break e;if(o.equals(a))return new e.PublicKey(a);throw new s.InvalidRoAError(`The RoA ID shoudl be ${new e.PublicKey(a).toBase58()} but is ${new e.PublicKey(o).toBase58()} `)}if(null==m?void 0:m.data){const r=new TextEncoder,t=Buffer.concat([m.data.slice(c.NameRegistryState.HEADER_LEN,c.NameRegistryState.HEADER_LEN+32),g.toBuffer()]),o=r.encode(t.toString("hex"));if(l.checkSolRecord(o,m.data.slice(c.NameRegistryState.HEADER_LEN+32,c.NameRegistryState.HEADER_LEN+32+e.SIGNATURE_LENGTH_IN_BYTES),q.owner))return new e.PublicKey(m.data.slice(c.NameRegistryState.HEADER_LEN,c.NameRegistryState.HEADER_LEN+32))}if(!e.PublicKey.isOnCurve(q.owner)){if("any"===R.allowPda)return q.owner;if(R.allowPda){const e=await w.getAccountInfo(q.owner);if(null===(y=R.programIds)||void 0===y?void 0:y.some((r=>{var t;return null===(t=null==e?void 0:e.owner)||void 0===t?void 0:t.equals(r)})))return q.owner;throw new s.PdaOwnerNotAllowed(`The Program ${null==e?void 0:e.owner.toBase58()} is not allowed`)}throw new s.PdaOwnerNotAllowed}return q.owner};
//# sourceMappingURL=resolve.cjs.map
